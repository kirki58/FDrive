#ifndef OBJECT_VERIFIER_H
#define OBJECT_VERIFIER_H

/* Generated by flatcc 0.6.2 FlatBuffers schema compiler for C by dvide.com */

#ifndef OBJECT_READER_H
#include "object_reader.h"
#endif
#include "flatcc/flatcc_verifier.h"
#include "flatcc/flatcc_prologue.h"

static int FDrive_IntHash_verify_table(flatcc_table_verifier_descriptor_t *td);
static int FDrive_StrHash_verify_table(flatcc_table_verifier_descriptor_t *td);
static int FDrive_FloatHash_verify_table(flatcc_table_verifier_descriptor_t *td);
static int FDrive_Object_verify_table(flatcc_table_verifier_descriptor_t *td);

static int FDrive_IntHash_verify_table(flatcc_table_verifier_descriptor_t *td)
{
    int ret;
    if ((ret = flatcc_verify_string_field(td, 0, 0) /* key */)) return ret;
    if ((ret = flatcc_verify_field(td, 1, 4, 4) /* value */)) return ret;
    return flatcc_verify_ok;
}

static inline int FDrive_IntHash_verify_as_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, FDrive_IntHash_identifier, &FDrive_IntHash_verify_table);
}

static inline int FDrive_IntHash_verify_as_root_with_size(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root_with_size(buf, bufsiz, FDrive_IntHash_identifier, &FDrive_IntHash_verify_table);
}

static inline int FDrive_IntHash_verify_as_typed_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, FDrive_IntHash_type_identifier, &FDrive_IntHash_verify_table);
}

static inline int FDrive_IntHash_verify_as_typed_root_with_size(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root_with_size(buf, bufsiz, FDrive_IntHash_type_identifier, &FDrive_IntHash_verify_table);
}

static inline int FDrive_IntHash_verify_as_root_with_identifier(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root(buf, bufsiz, fid, &FDrive_IntHash_verify_table);
}

static inline int FDrive_IntHash_verify_as_root_with_identifier_and_size(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root_with_size(buf, bufsiz, fid, &FDrive_IntHash_verify_table);
}

static inline int FDrive_IntHash_verify_as_root_with_type_hash(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root(buf, bufsiz, thash, &FDrive_IntHash_verify_table);
}

static inline int FDrive_IntHash_verify_as_root_with_type_hash_and_size(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root_with_size(buf, bufsiz, thash, &FDrive_IntHash_verify_table);
}

static int FDrive_StrHash_verify_table(flatcc_table_verifier_descriptor_t *td)
{
    int ret;
    if ((ret = flatcc_verify_string_field(td, 0, 0) /* key */)) return ret;
    if ((ret = flatcc_verify_string_field(td, 1, 0) /* value */)) return ret;
    return flatcc_verify_ok;
}

static inline int FDrive_StrHash_verify_as_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, FDrive_StrHash_identifier, &FDrive_StrHash_verify_table);
}

static inline int FDrive_StrHash_verify_as_root_with_size(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root_with_size(buf, bufsiz, FDrive_StrHash_identifier, &FDrive_StrHash_verify_table);
}

static inline int FDrive_StrHash_verify_as_typed_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, FDrive_StrHash_type_identifier, &FDrive_StrHash_verify_table);
}

static inline int FDrive_StrHash_verify_as_typed_root_with_size(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root_with_size(buf, bufsiz, FDrive_StrHash_type_identifier, &FDrive_StrHash_verify_table);
}

static inline int FDrive_StrHash_verify_as_root_with_identifier(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root(buf, bufsiz, fid, &FDrive_StrHash_verify_table);
}

static inline int FDrive_StrHash_verify_as_root_with_identifier_and_size(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root_with_size(buf, bufsiz, fid, &FDrive_StrHash_verify_table);
}

static inline int FDrive_StrHash_verify_as_root_with_type_hash(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root(buf, bufsiz, thash, &FDrive_StrHash_verify_table);
}

static inline int FDrive_StrHash_verify_as_root_with_type_hash_and_size(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root_with_size(buf, bufsiz, thash, &FDrive_StrHash_verify_table);
}

static int FDrive_FloatHash_verify_table(flatcc_table_verifier_descriptor_t *td)
{
    int ret;
    if ((ret = flatcc_verify_string_field(td, 0, 0) /* key */)) return ret;
    if ((ret = flatcc_verify_field(td, 1, 4, 4) /* value */)) return ret;
    return flatcc_verify_ok;
}

static inline int FDrive_FloatHash_verify_as_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, FDrive_FloatHash_identifier, &FDrive_FloatHash_verify_table);
}

static inline int FDrive_FloatHash_verify_as_root_with_size(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root_with_size(buf, bufsiz, FDrive_FloatHash_identifier, &FDrive_FloatHash_verify_table);
}

static inline int FDrive_FloatHash_verify_as_typed_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, FDrive_FloatHash_type_identifier, &FDrive_FloatHash_verify_table);
}

static inline int FDrive_FloatHash_verify_as_typed_root_with_size(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root_with_size(buf, bufsiz, FDrive_FloatHash_type_identifier, &FDrive_FloatHash_verify_table);
}

static inline int FDrive_FloatHash_verify_as_root_with_identifier(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root(buf, bufsiz, fid, &FDrive_FloatHash_verify_table);
}

static inline int FDrive_FloatHash_verify_as_root_with_identifier_and_size(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root_with_size(buf, bufsiz, fid, &FDrive_FloatHash_verify_table);
}

static inline int FDrive_FloatHash_verify_as_root_with_type_hash(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root(buf, bufsiz, thash, &FDrive_FloatHash_verify_table);
}

static inline int FDrive_FloatHash_verify_as_root_with_type_hash_and_size(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root_with_size(buf, bufsiz, thash, &FDrive_FloatHash_verify_table);
}

static int FDrive_Object_verify_table(flatcc_table_verifier_descriptor_t *td)
{
    int ret;
    if ((ret = flatcc_verify_table_vector_field(td, 0, 0, &FDrive_IntHash_verify_table) /* ihash */)) return ret;
    if ((ret = flatcc_verify_table_vector_field(td, 1, 0, &FDrive_StrHash_verify_table) /* shash */)) return ret;
    if ((ret = flatcc_verify_table_vector_field(td, 2, 0, &FDrive_FloatHash_verify_table) /* fhash */)) return ret;
    return flatcc_verify_ok;
}

static inline int FDrive_Object_verify_as_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, FDrive_Object_identifier, &FDrive_Object_verify_table);
}

static inline int FDrive_Object_verify_as_root_with_size(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root_with_size(buf, bufsiz, FDrive_Object_identifier, &FDrive_Object_verify_table);
}

static inline int FDrive_Object_verify_as_typed_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, FDrive_Object_type_identifier, &FDrive_Object_verify_table);
}

static inline int FDrive_Object_verify_as_typed_root_with_size(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root_with_size(buf, bufsiz, FDrive_Object_type_identifier, &FDrive_Object_verify_table);
}

static inline int FDrive_Object_verify_as_root_with_identifier(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root(buf, bufsiz, fid, &FDrive_Object_verify_table);
}

static inline int FDrive_Object_verify_as_root_with_identifier_and_size(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root_with_size(buf, bufsiz, fid, &FDrive_Object_verify_table);
}

static inline int FDrive_Object_verify_as_root_with_type_hash(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root(buf, bufsiz, thash, &FDrive_Object_verify_table);
}

static inline int FDrive_Object_verify_as_root_with_type_hash_and_size(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root_with_size(buf, bufsiz, thash, &FDrive_Object_verify_table);
}

#include "flatcc/flatcc_epilogue.h"
#endif /* OBJECT_VERIFIER_H */
