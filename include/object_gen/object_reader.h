#ifndef OBJECT_READER_H
#define OBJECT_READER_H

/* Generated by flatcc 0.6.2 FlatBuffers schema compiler for C by dvide.com */

#ifndef FLATBUFFERS_COMMON_READER_H
#include "flatbuffers_common_reader.h"
#endif
#include "flatcc/flatcc_flatbuffers.h"
#ifndef __alignas_is_defined
#include <stdalign.h>
#endif
#include "flatcc/flatcc_prologue.h"
#ifndef flatbuffers_identifier
#define flatbuffers_identifier 0
#endif
#ifndef flatbuffers_extension
#define flatbuffers_extension "bin"
#endif


typedef const struct FDrive_IntHash_table *FDrive_IntHash_table_t;
typedef struct FDrive_IntHash_table *FDrive_IntHash_mutable_table_t;
typedef const flatbuffers_uoffset_t *FDrive_IntHash_vec_t;
typedef flatbuffers_uoffset_t *FDrive_IntHash_mutable_vec_t;
typedef const struct FDrive_StrHash_table *FDrive_StrHash_table_t;
typedef struct FDrive_StrHash_table *FDrive_StrHash_mutable_table_t;
typedef const flatbuffers_uoffset_t *FDrive_StrHash_vec_t;
typedef flatbuffers_uoffset_t *FDrive_StrHash_mutable_vec_t;
typedef const struct FDrive_FloatHash_table *FDrive_FloatHash_table_t;
typedef struct FDrive_FloatHash_table *FDrive_FloatHash_mutable_table_t;
typedef const flatbuffers_uoffset_t *FDrive_FloatHash_vec_t;
typedef flatbuffers_uoffset_t *FDrive_FloatHash_mutable_vec_t;
typedef const struct FDrive_Object_table *FDrive_Object_table_t;
typedef struct FDrive_Object_table *FDrive_Object_mutable_table_t;
typedef const flatbuffers_uoffset_t *FDrive_Object_vec_t;
typedef flatbuffers_uoffset_t *FDrive_Object_mutable_vec_t;
#ifndef FDrive_IntHash_file_identifier
#define FDrive_IntHash_file_identifier 0
#endif
/* deprecated, use FDrive_IntHash_file_identifier */
#ifndef FDrive_IntHash_identifier
#define FDrive_IntHash_identifier 0
#endif
#define FDrive_IntHash_type_hash ((flatbuffers_thash_t)0x20ad6b40)
#define FDrive_IntHash_type_identifier "\x40\x6b\xad\x20"
#ifndef FDrive_IntHash_file_extension
#define FDrive_IntHash_file_extension "bin"
#endif
#ifndef FDrive_StrHash_file_identifier
#define FDrive_StrHash_file_identifier 0
#endif
/* deprecated, use FDrive_StrHash_file_identifier */
#ifndef FDrive_StrHash_identifier
#define FDrive_StrHash_identifier 0
#endif
#define FDrive_StrHash_type_hash ((flatbuffers_thash_t)0x81014d0a)
#define FDrive_StrHash_type_identifier "\x0a\x4d\x01\x81"
#ifndef FDrive_StrHash_file_extension
#define FDrive_StrHash_file_extension "bin"
#endif
#ifndef FDrive_FloatHash_file_identifier
#define FDrive_FloatHash_file_identifier 0
#endif
/* deprecated, use FDrive_FloatHash_file_identifier */
#ifndef FDrive_FloatHash_identifier
#define FDrive_FloatHash_identifier 0
#endif
#define FDrive_FloatHash_type_hash ((flatbuffers_thash_t)0xe543e62b)
#define FDrive_FloatHash_type_identifier "\x2b\xe6\x43\xe5"
#ifndef FDrive_FloatHash_file_extension
#define FDrive_FloatHash_file_extension "bin"
#endif
#ifndef FDrive_Object_file_identifier
#define FDrive_Object_file_identifier 0
#endif
/* deprecated, use FDrive_Object_file_identifier */
#ifndef FDrive_Object_identifier
#define FDrive_Object_identifier 0
#endif
#define FDrive_Object_type_hash ((flatbuffers_thash_t)0x232fc25c)
#define FDrive_Object_type_identifier "\x5c\xc2\x2f\x23"
#ifndef FDrive_Object_file_extension
#define FDrive_Object_file_extension "bin"
#endif



struct FDrive_IntHash_table { uint8_t unused__; };

static inline size_t FDrive_IntHash_vec_len(FDrive_IntHash_vec_t vec)
__flatbuffers_vec_len(vec)
static inline FDrive_IntHash_table_t FDrive_IntHash_vec_at(FDrive_IntHash_vec_t vec, size_t i)
__flatbuffers_offset_vec_at(FDrive_IntHash_table_t, vec, i, 0)
__flatbuffers_table_as_root(FDrive_IntHash)

__flatbuffers_define_string_field(0, FDrive_IntHash, key, 0)
__flatbuffers_define_scalar_field(1, FDrive_IntHash, value, flatbuffers_int32, int32_t, INT32_C(0))

struct FDrive_StrHash_table { uint8_t unused__; };

static inline size_t FDrive_StrHash_vec_len(FDrive_StrHash_vec_t vec)
__flatbuffers_vec_len(vec)
static inline FDrive_StrHash_table_t FDrive_StrHash_vec_at(FDrive_StrHash_vec_t vec, size_t i)
__flatbuffers_offset_vec_at(FDrive_StrHash_table_t, vec, i, 0)
__flatbuffers_table_as_root(FDrive_StrHash)

__flatbuffers_define_string_field(0, FDrive_StrHash, key, 0)
__flatbuffers_define_string_field(1, FDrive_StrHash, value, 0)

struct FDrive_FloatHash_table { uint8_t unused__; };

static inline size_t FDrive_FloatHash_vec_len(FDrive_FloatHash_vec_t vec)
__flatbuffers_vec_len(vec)
static inline FDrive_FloatHash_table_t FDrive_FloatHash_vec_at(FDrive_FloatHash_vec_t vec, size_t i)
__flatbuffers_offset_vec_at(FDrive_FloatHash_table_t, vec, i, 0)
__flatbuffers_table_as_root(FDrive_FloatHash)

__flatbuffers_define_string_field(0, FDrive_FloatHash, key, 0)
__flatbuffers_define_scalar_field(1, FDrive_FloatHash, value, flatbuffers_float, float, 0.00000000f)

struct FDrive_Object_table { uint8_t unused__; };

static inline size_t FDrive_Object_vec_len(FDrive_Object_vec_t vec)
__flatbuffers_vec_len(vec)
static inline FDrive_Object_table_t FDrive_Object_vec_at(FDrive_Object_vec_t vec, size_t i)
__flatbuffers_offset_vec_at(FDrive_Object_table_t, vec, i, 0)
__flatbuffers_table_as_root(FDrive_Object)

__flatbuffers_define_vector_field(0, FDrive_Object, ihash, FDrive_IntHash_vec_t, 0)
__flatbuffers_define_vector_field(1, FDrive_Object, shash, FDrive_StrHash_vec_t, 0)
__flatbuffers_define_vector_field(2, FDrive_Object, fhash, FDrive_FloatHash_vec_t, 0)


#include "flatcc/flatcc_epilogue.h"
#endif /* OBJECT_READER_H */
